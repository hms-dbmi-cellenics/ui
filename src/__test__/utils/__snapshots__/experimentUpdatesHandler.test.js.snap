// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ExperimentUpdatesHandler Handles qc errors correctly with config update 1`] = `
[MockFunction] {
  "calls": [
    [
      "Experiment updates error:",
      {
        "input": {
          "sampleUuid": "mockSampleUuid",
          "taskName": "mockTaskName",
        },
        "output": {
          "config": {
            "processingConfigUpdate": {
              "mockProcessingConfigUpdate": "mockProcessingConfigUpdate",
            },
          },
          "plotData": undefined,
        },
        "pipelineVersion": 2,
        "response": {
          "error": true,
          "errorCode": "MOCK_ERROR_CODE",
          "userMessage": "mockUserMessage",
        },
        "status": {
          "pipeline": {
            "status": "ERROR",
          },
        },
        "type": "qc",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`ExperimentUpdatesHandler Handles qc errors correctly without config update 1`] = `
[MockFunction] {
  "calls": [
    [
      "Experiment updates error:",
      {
        "input": {
          "sampleUuid": "mockSampleUuid",
          "taskName": "mockTaskName",
        },
        "output": undefined,
        "pipelineVersion": 2,
        "response": {
          "error": true,
          "errorCode": "MOCK_ERROR_CODE",
          "userMessage": "mockUserMessage",
        },
        "status": {
          "pipeline": {
            "status": "ERROR",
          },
        },
        "type": "qc",
      },
    ],
  ],
  "results": [
    {
      "type": "return",
      "value": undefined,
    },
  ],
}
`;

exports[`ExperimentUpdatesHandler Loads cell sets if QC pipeline completes  1`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "pipeline": {
      "status": "SUCCEEDED",
    },
  },
]
`;

exports[`ExperimentUpdatesHandler Loads cell sets if QC pipeline completes  2`] = `
[
  "mockPlotUuid",
  "mockPlotData",
]
`;

exports[`ExperimentUpdatesHandler Loads cell sets if QC pipeline completes  3`] = `
[
  [
    "testae48e318dab9a1bd0bexperiment",
    2,
  ],
]
`;

exports[`ExperimentUpdatesHandler Loads cell sets if QC pipeline completes  4`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  true,
]
`;

exports[`ExperimentUpdatesHandler Loads cell sets if Obj2s pipeline completes  1`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "obj2s": {
      "status": "SUCCEEDED",
    },
  },
]
`;

exports[`ExperimentUpdatesHandler Loads cell sets if Obj2s pipeline completes  2`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  true,
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for GEM2S updates  1`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "pipeline": {
      "status": "RUNNING",
    },
  },
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for GEM2S updates  2`] = `undefined`;

exports[`ExperimentUpdatesHandler Triggers properly for QC updates  1`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "pipeline": {
      "status": "RUNNING",
    },
  },
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for QC updates  2`] = `
[
  "mockTaskName",
  {
    "processingConfigUpdate": {
      "mockProcessingConfigUpdate": "mockProcessingConfigUpdate",
    },
  },
  "mockSampleUuid",
  false,
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for QC updates  3`] = `
[
  [
    "testae48e318dab9a1bd0bexperiment",
    2,
  ],
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for QC updates  4`] = `
[
  "mockPlotUuid",
  "mockPlotData",
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for OBJ2S updates  1`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "obj2s": {
      "status": "RUNNING",
    },
  },
]
`;

exports[`ExperimentUpdatesHandler Triggers properly for OBJ2S updates  2`] = `
[
  "testae48e318dab9a1bd0bexperiment",
  {
    "obj2s": {
      "status": "RUNNING",
    },
  },
]
`;
